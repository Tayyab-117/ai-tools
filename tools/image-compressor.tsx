'use client'
import { useRef, useState } from 'react'
export default function Compressor(){ const [img,setImg]=useState<HTMLImageElement|null>(null); const [q,setQ]=useState(0.8); const [fmt,setFmt]=useState<'image/jpeg'|'image/webp'>('image/webp'); const cRef=useRef<HTMLCanvasElement>(null)
  const onFile=(f:File)=>{ const url=URL.createObjectURL(f); const im=new Image(); im.onload=()=>setImg(im); im.src=url }
  const download=()=>{ if(!img) return; const c=cRef.current!; c.width=img.naturalWidth; c.height=img.naturalHeight; const ctx=c.getContext('2d')!; ctx.drawImage(img,0,0); c.toBlob((b)=>{ if(!b) return; const a=document.createElement('a'); a.href=URL.createObjectURL(b); a.download=`compressed.${fmt==='image/webp'?'webp':'jpg'}`; a.click() }, fmt, q) }
  return (<div className="space-y-4">{!img && <input type="file" accept="image/*" className="input" onChange={e=>e.target.files && onFile(e.target.files[0])}/>}{img && <div className="space-y-3"><div className="card p-4 flex items-center gap-3"><select className="input w-48" value={fmt} onChange={e=>setFmt(e.target.value as any)}><option value="image/webp">WEBP (smaller)</option><option value="image/jpeg">JPG</option></select><label className="text-sm">Quality</label><input type="range" min={0.4} max={1} step={0.05} value={q} onChange={e=>setQ(parseFloat(e.target.value))}/><span className="text-sm">{Math.round(q*100)}%</span><button className="btn-primary" onClick={download}>Download</button></div><div className="card p-4"><canvas ref={cRef} className="w-full rounded border"/></div></div>}</div>)}
